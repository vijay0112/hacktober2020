/*
1  
1 1 
1 2 1 
1 3 3 1 
1 4 6 4 1 
1 5 10 10 5 1 
*/

// pascals triangle
// ALGORITHM:
 FIRST FILL ALL CORNERS WITH 1'S USING A FOR LOOP
 NOW USING TECHNIQUE A[I][J]=A[I-1][J](PREVIOUS ROW SAME COLUMNS)+A[I-1][J-1](PREVIOUS ROW AND PREVIOUS COLUMNS)
// IN THIS AT FIRST 1 AND 11 ARE PREFILLED AND START FOR LOOP AS SUCH TAKING THIS INTO CONSIDERATION

int main()
{
    int a[5][5];
    
    int n;
    cout<<"value of n"<<endl;
    cin>>n;
    n=n+1;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            a[i][j]=0;
        }
    }
    a[0][0]=1;
    // this below for loop creates a 1's boundary all around the pattern
    for(int i=1;i<n;i++)
    {
        int val=i+1;
        a[i][0]=1;
        a[i][val]=1;
    }

    // now solve the middle part
    for(int i=2;i<n;i++)
    {
        for(int j=1;j<i;j++)
        {
            a[i][j]=a[i-1][j]+a[i-1][j-1];
        }
    }
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<i;j++)
        {
            cout<<a[i][j]<<" ";
        }
        cout<<endl;
    }
    return 0;
}
